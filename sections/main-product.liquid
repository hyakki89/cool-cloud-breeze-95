{% assign current_variant = product.selected_or_first_available_variant %}
{% assign product_form_id = 'ProductForm-' | append: section.id %}

<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

<div class="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-purple-50">
  <div class="container mx-auto px-4 py-8">
    <div class="grid lg:grid-cols-2 gap-12">
      
      <!-- Images Section -->
      <div class="space-y-4">
        <div class="relative bg-white rounded-2xl p-4 shadow-lg">
          <img
            id="main-product-image"
            src="{{ current_variant.featured_media.preview_image.url | default: product.featured_media.preview_image.url | image_url: width: 600 }}"
            alt="{{ product.title | escape }}"
            class="w-full h-96 object-cover rounded-xl"
          />
          <div class="absolute top-6 left-6 space-y-2">
            <span class="bg-green-500 text-white px-3 py-1 rounded font-semibold text-sm">‚ú® Nouveau</span>
            {% if current_variant.compare_at_price > current_variant.price %}
              {% assign discount_percent = current_variant.compare_at_price | minus: current_variant.price | times: 100 | divided_by: current_variant.compare_at_price | round %}
              <span class="bg-red-500 text-white px-3 py-1 rounded font-semibold text-sm animate-pulse">üî• -{{ discount_percent }}%</span>
            {% endif %}
          </div>
        </div>
        
        <div class="grid grid-cols-4 gap-2">
          {% for image in product.images limit: 4 %}
            <button
              type="button"
              onclick="changeMainImage('{{ image | image_url: width: 600 }}')"
              class="border-2 rounded-lg overflow-hidden transition-all border-gray-200 hover:border-blue-400 hover:scale-105"
            >
              <img src="{{ image | image_url: width: 150 }}" alt="{{ image.alt | escape }}" class="w-full h-20 object-cover" />
            </button>
          {% endfor %}
        </div>
      </div>

      <!-- Product Info -->
      <div class="space-y-6">
        
        <div>
          <h1 class="text-3xl font-bold bg-gradient-to-r from-gray-900 via-blue-600 to-purple-600 bg-clip-text text-transparent mb-4">{{ product.title }}</h1>
          <div class="flex items-center space-x-3 mb-4">
            <div class="flex text-yellow-400">
              ‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ
            </div>
            <span class="text-gray-600 font-medium">(4.9/5 - 127 avis)</span>
            <div class="flex items-center text-green-600 text-sm font-semibold">
              ‚úì +2,000 clients satisfaits
            </div>
          </div>
        </div>

        <!-- Prix -->
        <div class="bg-gradient-to-br from-white via-blue-50 to-purple-50 backdrop-blur-sm border-2 border-blue-200 shadow-xl rounded-2xl p-6">
          <div class="text-center mb-4">
            <div class="flex items-center justify-center space-x-3 mb-2">
              {% if current_variant.compare_at_price > current_variant.price %}
                <span class="text-2xl text-gray-400 line-through">{{ current_variant.compare_at_price | money }}</span>
              {% endif %}
              <span id="variant-price" class="text-5xl font-black bg-gradient-to-r from-blue-400 via-purple-500 to-pink-400 bg-clip-text text-transparent">{{ current_variant.price | money }}</span>
            </div>
          </div>
          
          <div class="grid grid-cols-2 gap-4 text-sm">
            <div class="flex items-center text-blue-600 font-semibold">
              üöö Livraison gratuite
            </div>
            <div class="flex items-center text-purple-600 font-semibold">
              ‚ö° Exp√©dition 24h
            </div>
            <div class="flex items-center text-green-600 font-semibold">
              üõ°Ô∏è Garantie 30j
            </div>
            <div class="flex items-center text-orange-600 font-semibold">
              üîí Paiement s√©curis√©
            </div>
          </div>
        </div>

        <!-- Description -->
        <div class="bg-gradient-to-r from-blue-50 to-purple-50 rounded-2xl p-6 border border-blue-200">
          {% if product.description != blank %}
            <p class="text-lg text-gray-800 font-medium leading-relaxed mb-4">{{ product.description }}</p>
          {% else %}
            <p class="text-lg text-gray-800 font-medium leading-relaxed mb-4">
              üöÄ <strong>La bague connect√©e qui r√©volutionne ton quotidien !</strong> Contr√¥le tes r√©seaux sociaux, ta musique et tes photos d'un simple geste. 
              Design minimaliste et discret pour une technologie innovante √† port√©e de main.
            </p>
          {% endif %}
          <div class="flex flex-wrap gap-2">
            <span class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-semibold">üì± Compatible iOS/Android</span>
            <span class="bg-purple-100 text-purple-800 px-3 py-1 rounded-full text-sm font-semibold">üéµ Contr√¥le musical</span>
            <span class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-semibold">üì∏ Selfies √† distance</span>
          </div>
        </div>

        <!-- Formulaire Produit -->
        {% form 'product', product, id: product_form_id %}
          <div class="space-y-4">
            
            {% unless product.has_only_default_variant %}
              {% for option in product.options_with_values %}
                <div>
                  <label class="block font-semibold mb-2">{{ option.name }} :</label>
                  {% if option.name == 'Couleur' or option.name == 'Color' %}
                    <div class="flex space-x-3">
                      {% for value in option.values %}
                        <input 
                          type="radio" 
                          name="options[{{ option.name | escape }}]" 
                          value="{{ value | escape }}" 
                          id="option-{{ option.name | handleize }}-{{ forloop.index0 }}"
                          {% if option.selected_value == value %}checked{% endif %}
                          class="sr-only">
                        <label 
                          for="option-{{ option.name | handleize }}-{{ forloop.index0 }}" 
                          class="w-12 h-12 rounded-full border-4 cursor-pointer transition-all hover:scale-110 {% if value contains 'white' or value contains 'Blanc' %}bg-white border-gray-300{% elsif value contains 'black' or value contains 'Noir' %}bg-gray-900 border-gray-900{% elsif value contains 'rose' or value contains 'Rose' %}bg-pink-400 border-pink-400{% elsif value contains 'blue' or value contains 'Bleu' %}bg-blue-400 border-blue-400{% else %}bg-gray-300 border-gray-300{% endif %}">
                        </label>
                      {% endfor %}
                    </div>
                  {% else %}
                    <select name="options[{{ option.name | escape }}]" class="w-full p-3 border-2 border-gray-300 rounded-xl focus:border-blue-400">
                      {% for value in option.values %}
                        <option value="{{ value | escape }}" {% if option.selected_value == value %}selected{% endif %}>{{ value }}</option>
                      {% endfor %}
                    </select>
                  {% endif %}
                </div>
              {% endfor %}
            {% endunless %}

            <div>
              <label class="block font-semibold mb-2">Quantit√© :</label>
              <div class="flex items-center space-x-3">
                <button type="button" onclick="changeQuantity(-1)" class="w-12 h-12 border-2 border-gray-300 rounded-lg flex items-center justify-center hover:bg-gray-50 font-bold">-</button>
                <input type="number" name="quantity" id="quantity" value="1" min="1" class="w-16 text-center font-semibold border-0 bg-transparent">
                <button type="button" onclick="changeQuantity(1)" class="w-12 h-12 border-2 border-gray-300 rounded-lg flex items-center justify-center hover:bg-gray-50 font-bold">+</button>
              </div>
            </div>

            <div class="bg-red-50 border border-red-200 rounded-xl p-4 text-center">
              <div class="flex items-center justify-center text-red-600 font-bold mb-2">
                ‚è∞ Offre limit√©e dans le temps !
              </div>
              <p class="text-red-700 text-sm">Plus que 12 unit√©s en stock - Commandez maintenant !</p>
            </div>
            
            <button 
              type="submit" 
              name="add" 
              class="w-full bg-gradient-to-r from-blue-400 to-pink-400 hover:from-pink-400 hover:to-blue-400 text-white font-bold py-4 rounded-2xl text-lg shadow-2xl transform hover:scale-105 transition-all duration-300"
              {% unless current_variant.available %}disabled{% endunless %}>
              {% if current_variant.available %}
                ‚ö° Acheter maintenant - <span id="add-to-cart-price">{{ current_variant.price | money }}</span> ‚ö°
              {% else %}
                Rupture de stock
              {% endif %}
            </button>
            
            <p class="text-center text-sm text-gray-600">
              ‚úÖ Paiement s√©curis√© ‚Ä¢ üì¶ Livraison rapide ‚Ä¢ üîÑ Retour gratuit 30j
            </p>
          </div>
        {% endform %}

      </div>
    </div>
  </div>
</div>

<script>
function changeMainImage(src) {
  document.getElementById('main-product-image').src = src;
}

function changeQuantity(change) {
  const quantityInput = document.getElementById('quantity');
  const currentValue = parseInt(quantityInput.value);
  const newValue = Math.max(1, currentValue + change);
  quantityInput.value = newValue;
}

// Gestion des variantes Shopify
document.addEventListener('DOMContentLoaded', function() {
  const productForm = document.querySelector('#{{ product_form_id }}');
  const variants = {{ product.variants | json }};
  
  function updateVariant() {
    const formData = new FormData(productForm);
    const selectedOptions = {};
    
    for (let [key, value] of formData.entries()) {
      if (key.startsWith('options[')) {
        const optionName = key.match(/\[(.*?)\]/)[1];
        selectedOptions[optionName] = value;
      }
    }
    
    const selectedVariant = variants.find(variant => {
      return Object.keys(selectedOptions).every(optionName => {
        const optionIndex = {{ product.options | map: 'name' | json }}.indexOf(optionName) + 1;
        return variant['option' + optionIndex] === selectedOptions[optionName];
      });
    });
    
    if (selectedVariant) {
      // Mettre √† jour le prix
      const priceElement = document.getElementById('variant-price');
      const addToCartPrice = document.getElementById('add-to-cart-price');
      const formattedPrice = new Intl.NumberFormat('fr-FR', {
        style: 'currency',
        currency: '{{ cart.currency.iso_code }}'
      }).format(selectedVariant.price / 100);
      
      if (priceElement) priceElement.textContent = formattedPrice;
      if (addToCartPrice) addToCartPrice.textContent = formattedPrice;
      
      // Mettre √† jour l'image principale si la variante a une image
      if (selectedVariant.featured_media && selectedVariant.featured_media.preview_image) {
        changeMainImage(selectedVariant.featured_media.preview_image.url);
      }
      
      // G√©rer la disponibilit√©
      const submitButton = productForm.querySelector('button[type="submit"]');
      if (selectedVariant.available) {
        submitButton.disabled = false;
        submitButton.innerHTML = `‚ö° Acheter maintenant - <span id="add-to-cart-price">${formattedPrice}</span> ‚ö°`;
      } else {
        submitButton.disabled = true;
        submitButton.textContent = 'Rupture de stock';
      }
      
      // Mettre √† jour l'input hidden avec l'ID de la variante
      let variantInput = productForm.querySelector('input[name="id"]');
      if (!variantInput) {
        variantInput = document.createElement('input');
        variantInput.type = 'hidden';
        variantInput.name = 'id';
        productForm.appendChild(variantInput);
      }
      variantInput.value = selectedVariant.id;
    }
  }
  
  // √âcouter les changements d'options
  productForm.addEventListener('change', updateVariant);
  
  // Mise √† jour initiale
  updateVariant();
});
</script>