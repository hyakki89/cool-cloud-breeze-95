{% assign current_variant = product.selected_or_first_available_variant %}
{% assign product_form_id = 'ProductForm-' | append: section.id %}

<style>
/* Styles pour les emojis et ic√¥nes */
.emoji-icon {
  display: inline-block;
  width: 20px;
  height: 20px;
  font-size: 16px;
  line-height: 20px;
  vertical-align: middle;
  margin-right: 8px;
  text-align: center;
}

.product-benefits {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 12px;
}

.benefit-item {
  display: flex;
  align-items: center;
  font-size: 14px;
  font-weight: 600;
}

.product-tags .tag {
  display: inline-flex;
  align-items: center;
  padding: 6px 12px;
  border-radius: 20px;
  font-size: 14px;
  font-weight: 600;
  margin: 4px;
}

/* Styles de base avec Tailwind int√©gr√© */
.zen-container { max-width: 1200px; margin: 0 auto; padding: 0 1rem; }
.zen-grid { display: grid; grid-template-columns: 1fr; gap: 2rem; }
@media (min-width: 1024px) { .zen-grid { grid-template-columns: 1fr 1fr; } }
.zen-product-image { width: 100%; height: 400px; object-fit: cover; border-radius: 12px; }
.zen-thumbnails { display: grid; grid-template-columns: repeat(4, 1fr); gap: 8px; margin-top: 1rem; }
.zen-thumbnail { width: 100%; height: 60px; object-fit: cover; border-radius: 8px; border: 2px solid #e5e7eb; cursor: pointer; transition: all 0.2s; }
.zen-thumbnail:hover { border-color: #3b82f6; transform: scale(1.05); }
.zen-price { font-size: 2.5rem; font-weight: 800; color: #1f2937; }
.zen-price-compare { font-size: 1.5rem; color: #9ca3af; text-decoration: line-through; }
.zen-btn { padding: 1rem 2rem; border-radius: 12px; font-weight: 700; font-size: 1.1rem; cursor: pointer; transition: all 0.3s; }
.zen-btn-primary { background: linear-gradient(135deg, #3b82f6, #8b5cf6); color: white; border: none; }
.zen-btn-primary:hover { transform: translateY(-2px); box-shadow: 0 10px 25px rgba(59, 130, 246, 0.4); }
.zen-btn:disabled { opacity: 0.5; cursor: not-allowed; }
.zen-quantity { display: flex; align-items: center; gap: 12px; }
.zen-quantity button { width: 40px; height: 40px; border: 2px solid #d1d5db; border-radius: 8px; background: white; font-weight: bold; }
.zen-quantity input { width: 60px; text-align: center; border: none; font-weight: 600; }
.zen-variant-colors { display: flex; gap: 12px; }
.zen-color-option { width: 40px; height: 40px; border-radius: 50%; border: 3px solid #d1d5db; cursor: pointer; transition: all 0.2s; }
.zen-color-option:hover, .zen-color-option.selected { border-color: #3b82f6; transform: scale(1.1); }
.zen-badge { display: inline-block; padding: 4px 12px; border-radius: 20px; font-size: 12px; font-weight: 600; margin: 2px; }
.zen-badge-new { background: #10b981; color: white; }
.zen-badge-sale { background: #ef4444; color: white; animation: pulse 2s infinite; }
.zen-urgency { background: #fef2f2; border: 1px solid #fecaca; border-radius: 12px; padding: 1rem; text-align: center; color: #dc2626; }
.zen-features { display: flex; flex-wrap: wrap; gap: 8px; margin-top: 1rem; }
.zen-feature { background: #dbeafe; color: #1e40af; padding: 6px 12px; border-radius: 20px; font-size: 13px; font-weight: 600; }
</style>

<div class="zen-container" style="padding: 2rem 1rem;">
  <div class="zen-grid">
    
    <!-- Section Images -->
    <div>
      <div style="position: relative; background: white; border-radius: 16px; padding: 1rem; box-shadow: 0 10px 25px rgba(0,0,0,0.1);">
        <img
          id="main-product-image"
          src="{{ current_variant.featured_media.preview_image.url | default: product.featured_media.preview_image.url | image_url: width: 600 }}"
          alt="{{ product.title | escape }}"
          class="zen-product-image"
        />
        <div style="position: absolute; top: 1rem; left: 1rem; display: flex; flex-direction: column; gap: 8px;">
          <span class="zen-badge zen-badge-new"><span class="emoji-icon">‚ú®</span>Nouveau</span>
          {% if current_variant.compare_at_price > current_variant.price %}
            {% assign discount_percent = current_variant.compare_at_price | minus: current_variant.price | times: 100 | divided_by: current_variant.compare_at_price | round %}
            <span class="zen-badge zen-badge-sale"><span class="emoji-icon">üî•</span>-{{ discount_percent }}%</span>
          {% endif %}
        </div>
      </div>
      
      <div class="zen-thumbnails">
        {% for image in product.images limit: 4 %}
          <img
            src="{{ image | image_url: width: 150 }}"
            alt="{{ image.alt | escape }}"
            class="zen-thumbnail"
            onclick="changeMainImage('{{ image | image_url: width: 600 }}')"
          />
        {% endfor %}
      </div>
    </div>

    <!-- Informations Produit -->
    <div style="display: flex; flex-direction: column; gap: 1.5rem;">
      
      <!-- Titre et √âvaluations -->
      <div>
        <h1 style="font-size: 2rem; font-weight: 700; color: #1f2937; margin-bottom: 1rem;">{{ product.title }}</h1>
        <div style="display: flex; align-items: center; gap: 1rem; margin-bottom: 1rem;">
          <div style="color: #f59e0b; font-size: 18px;">‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ</div>
          <span style="color: #6b7280; font-weight: 500;">(4.9/5 - 127 avis)</span>
          <div style="color: #10b981; font-size: 14px; font-weight: 600;">
            <span class="emoji-icon">‚úì</span>+2,000 clients satisfaits
          </div>
        </div>
      </div>

      <!-- Prix -->
      <div style="background: linear-gradient(135deg, #f8fafc, #e0f2fe); border: 2px solid #bfdbfe; border-radius: 16px; padding: 1.5rem;">
        <div style="text-align: center; margin-bottom: 1rem;">
          {% if current_variant.compare_at_price > current_variant.price %}
            <span class="zen-price-compare">{{ current_variant.compare_at_price | money }}</span>
          {% endif %}
          <div id="variant-price" class="zen-price">{{ current_variant.price | money }}</div>
        </div>
        
        <div class="product-benefits">
          <div class="benefit-item" style="color: #2563eb;">
            <span class="emoji-icon">üöö</span>Livraison gratuite
          </div>
          <div class="benefit-item" style="color: #7c3aed;">
            <span class="emoji-icon">‚ö°</span>Exp√©dition 24h
          </div>
          <div class="benefit-item" style="color: #059669;">
            <span class="emoji-icon">üõ°Ô∏è</span>Garantie 30j
          </div>
          <div class="benefit-item" style="color: #dc2626;">
            <span class="emoji-icon">üîí</span>Paiement s√©curis√©
          </div>
        </div>
      </div>

      <!-- Formulaire Produit -->
      {% form 'product', product, id: product_form_id, class: 'product-form' %}
        <input type="hidden" name="id" value="{{ current_variant.id }}">
        
        {% unless product.has_only_default_variant %}
          {% for option in product.options_with_values %}
            <div>
              <label style="display: block; font-weight: 600; margin-bottom: 8px;">{{ option.name }} :</label>
              {% if option.name == 'Couleur' or option.name == 'Color' %}
                <div class="zen-variant-colors">
                  {% for value in option.values %}
                    <input 
                      type="radio" 
                      name="options[{{ option.name | escape }}]" 
                      value="{{ value | escape }}" 
                      id="option-{{ option.name | handleize }}-{{ forloop.index0 }}"
                      {% if option.selected_value == value %}checked{% endif %}
                      style="display: none;">
                    <label 
                      for="option-{{ option.name | handleize }}-{{ forloop.index0 }}" 
                      class="zen-color-option {% if option.selected_value == value %}selected{% endif %}"
                      style="background-color: {% if value contains 'white' or value contains 'Blanc' %}#ffffff{% elsif value contains 'black' or value contains 'Noir' %}#1f2937{% elsif value contains 'rose' or value contains 'Rose' %}#f472b6{% elsif value contains 'blue' or value contains 'Bleu' %}#60a5fa{% else %}#d1d5db{% endif %};">
                    </label>
                  {% endfor %}
                </div>
              {% else %}
                <select name="options[{{ option.name | escape }}]" style="width: 100%; padding: 12px; border: 2px solid #d1d5db; border-radius: 8px; font-weight: 600;">
                  {% for value in option.values %}
                    <option value="{{ value | escape }}" {% if option.selected_value == value %}selected{% endif %}>{{ value }}</option>
                  {% endfor %}
                </select>
              {% endif %}
            </div>
          {% endfor %}
        {% endunless %}

        <div>
          <label style="display: block; font-weight: 600; margin-bottom: 8px;">Quantit√© :</label>
          <div class="zen-quantity">
            <button type="button" onclick="changeQuantity(-1)">-</button>
            <input type="number" name="quantity" id="quantity" value="1" min="1">
            <button type="button" onclick="changeQuantity(1)">+</button>
          </div>
        </div>

        <div class="zen-urgency">
          <div style="font-weight: 700; margin-bottom: 8px;">
            <span class="emoji-icon">‚è∞</span>Offre limit√©e dans le temps !
          </div>
          <p style="font-size: 14px;">Plus que 12 unit√©s en stock - Commandez maintenant !</p>
        </div>
        
        <button 
          type="submit" 
          name="add" 
          class="zen-btn zen-btn-primary"
          style="width: 100%;"
          {% unless current_variant.available %}disabled{% endunless %}>
          {% if current_variant.available %}
            <span class="emoji-icon">‚ö°</span>Acheter maintenant - <span id="add-to-cart-price">{{ current_variant.price | money }}</span>
          {% else %}
            Rupture de stock
          {% endif %}
        </button>
        
        <p style="text-align: center; font-size: 14px; color: #6b7280;">
          <span class="emoji-icon">‚úÖ</span>Paiement s√©curis√© ‚Ä¢ <span class="emoji-icon">üì¶</span>Livraison rapide ‚Ä¢ <span class="emoji-icon">üîÑ</span>Retour gratuit 30j
        </p>
      {% endform %}

      <!-- Description -->
      <div style="background: linear-gradient(135deg, #eff6ff, #f3e8ff); border: 1px solid #c7d2fe; border-radius: 16px; padding: 1.5rem;">
        {% if product.description != blank %}
          <p style="font-size: 16px; color: #374151; font-weight: 500; line-height: 1.6; margin-bottom: 1rem;">{{ product.description }}</p>
        {% else %}
          <p style="font-size: 16px; color: #374151; font-weight: 500; line-height: 1.6; margin-bottom: 1rem;">
            <span class="emoji-icon">üöÄ</span><strong>La bague connect√©e qui r√©volutionne ton quotidien !</strong> Contr√¥le tes r√©seaux sociaux, ta musique et tes photos d'un simple geste. 
            Design minimaliste et discret pour une technologie innovante √† port√©e de main.
          </p>
        {% endif %}
        <div class="zen-features">
          <span class="zen-feature"><span class="emoji-icon">üì±</span>Compatible iOS/Android</span>
          <span class="zen-feature"><span class="emoji-icon">üéµ</span>Contr√¥le musical</span>
          <span class="zen-feature"><span class="emoji-icon">üì∏</span>Selfies √† distance</span>
        </div>
      </div>

    </div>
  </div>
</div>

<script>
function changeMainImage(src) {
  document.getElementById('main-product-image').src = src;
}

function changeQuantity(change) {
  const quantityInput = document.getElementById('quantity');
  const currentValue = parseInt(quantityInput.value);
  const newValue = Math.max(1, currentValue + change);
  quantityInput.value = newValue;
}

// Gestion des variantes Shopify
document.addEventListener('DOMContentLoaded', function() {
  const productForm = document.querySelector('#{{ product_form_id }}');
  const variants = {{ product.variants | json }};
  
  function updateVariant() {
    const formData = new FormData(productForm);
    const selectedOptions = {};
    
    for (let [key, value] of formData.entries()) {
      if (key.startsWith('options[')) {
        const optionName = key.match(/\[(.*?)\]/)[1];
        selectedOptions[optionName] = value;
      }
    }
    
    const selectedVariant = variants.find(variant => {
      return Object.keys(selectedOptions).every(optionName => {
        const optionIndex = {{ product.options | map: 'name' | json }}.indexOf(optionName) + 1;
        return variant['option' + optionIndex] === selectedOptions[optionName];
      });
    });
    
    if (selectedVariant) {
      // Mettre √† jour le prix
      const priceElement = document.getElementById('variant-price');
      const addToCartPrice = document.getElementById('add-to-cart-price');
      const formattedPrice = new Intl.NumberFormat('fr-FR', {
        style: 'currency',
        currency: '{{ cart.currency.iso_code }}'
      }).format(selectedVariant.price / 100);
      
      if (priceElement) priceElement.textContent = formattedPrice;
      if (addToCartPrice) addToCartPrice.textContent = formattedPrice;
      
      // Mettre √† jour l'image principale si la variante a une image
      if (selectedVariant.featured_media && selectedVariant.featured_media.preview_image) {
        changeMainImage(selectedVariant.featured_media.preview_image.url);
      }
      
      // G√©rer la disponibilit√©
      const submitButton = productForm.querySelector('button[type="submit"]');
      if (selectedVariant.available) {
        submitButton.disabled = false;
        submitButton.innerHTML = `‚ö° Acheter maintenant - <span id="add-to-cart-price">${formattedPrice}</span> ‚ö°`;
      } else {
        submitButton.disabled = true;
        submitButton.textContent = 'Rupture de stock';
      }
      
      // Mettre √† jour l'input hidden avec l'ID de la variante
      let variantInput = productForm.querySelector('input[name="id"]');
      if (!variantInput) {
        variantInput = document.createElement('input');
        variantInput.type = 'hidden';
        variantInput.name = 'id';
        productForm.appendChild(variantInput);
      }
      variantInput.value = selectedVariant.id;
    }
  }
  
  // √âcouter les changements d'options
  productForm.addEventListener('change', updateVariant);
  
  // Mise √† jour initiale
  updateVariant();
});
</script>