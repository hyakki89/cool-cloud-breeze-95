{% assign current_variant = product.selected_or_first_available_variant %}
{% assign product_form_id = 'ProductForm-' | append: section.id %}

<style>
/* Styles pour la page produit */
.product-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 2rem 1rem;
}

.product-grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
}

@media (min-width: 1024px) {
  .product-grid {
    grid-template-columns: 1fr 1fr;
  }
}

.product-image-container {
  background: white;
  border-radius: 16px;
  padding: 1rem;
  box-shadow: 0 10px 25px rgba(0,0,0,0.1);
}

.product-main-image {
  width: 100%;
  height: 400px;
  object-fit: cover;
  border-radius: 12px;
}

.product-thumbnails {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 8px;
  margin-top: 1rem;
}

.product-thumbnail {
  width: 100%;
  height: 60px;
  object-fit: cover;
  border-radius: 8px;
  border: 2px solid #e5e7eb;
  cursor: pointer;
  transition: all 0.2s;
}

.product-thumbnail:hover {
  border-color: #3b82f6;
  transform: scale(1.05);
}

.product-info {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.product-title {
  font-size: 2rem;
  font-weight: 700;
  color: #1f2937;
  margin-bottom: 1rem;
}

.product-price {
  font-size: 2.5rem;
  font-weight: 800;
  color: #1f2937;
}

.product-price-compare {
  font-size: 1.5rem;
  color: #9ca3af;
  text-decoration: line-through;
}

.product-button {
  padding: 1rem 2rem;
  border-radius: 12px;
  font-weight: 700;
  font-size: 1.1rem;
  cursor: pointer;
  transition: all 0.3s;
  background: linear-gradient(135deg, #3b82f6, #8b5cf6);
  color: white;
  border: none;
  width: 100%;
}

.product-button:hover {
  transform: translateY(-2px);
  box-shadow: 0 10px 25px rgba(59, 130, 246, 0.4);
}

.product-button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.quantity-selector {
  display: flex;
  align-items: center;
  gap: 12px;
}

.quantity-button {
  width: 40px;
  height: 40px;
  border: 2px solid #d1d5db;
  border-radius: 8px;
  background: white;
  font-weight: bold;
  cursor: pointer;
}

.quantity-input {
  width: 60px;
  text-align: center;
  border: 1px solid #d1d5db;
  border-radius: 4px;
  padding: 8px;
  font-weight: 600;
}

.price-box {
  background: linear-gradient(135deg, #f8fafc, #e0f2fe);
  border: 2px solid #bfdbfe;
  border-radius: 16px;
  padding: 1.5rem;
  text-align: center;
}

.product-badges {
  position: absolute;
  top: 1rem;
  left: 1rem;
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.badge {
  display: inline-block;
  padding: 4px 12px;
  border-radius: 20px;
  font-size: 12px;
  font-weight: 600;
  color: white;
}

.badge-new {
  background: #10b981;
}

.badge-sale {
  background: #ef4444;
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.7; }
}
</style>

<div class="product-container">
  <div class="product-grid">
    <!-- Section Images -->
    <div>
      <div class="product-image-container" style="position: relative;">
        <img
          id="main-product-image"
          src="{{ current_variant.featured_media.preview_image.url | default: product.featured_media.preview_image.url | image_url: width: 600 }}"
          alt="{{ product.title | escape }}"
          class="product-main-image"
        />
        <div class="product-badges">
          <span class="badge badge-new">âœ¨ Nouveau</span>
          {% if current_variant.compare_at_price > current_variant.price %}
            {% assign discount_percent = current_variant.compare_at_price | minus: current_variant.price | times: 100 | divided_by: current_variant.compare_at_price | round %}
            <span class="badge badge-sale">ðŸ”¥ -{{ discount_percent }}%</span>
          {% endif %}
        </div>
      </div>
      
      {% if product.images.size > 1 %}
        <div class="product-thumbnails">
          {% for image in product.images limit: 4 %}
            <img
              src="{{ image | image_url: width: 150 }}"
              alt="{{ image.alt | escape }}"
              class="product-thumbnail"
              onclick="changeMainImage('{{ image | image_url: width: 600 }}')"
            />
          {% endfor %}
        </div>
      {% endif %}
    </div>

    <!-- Informations Produit -->
    <div class="product-info">
      
      <!-- Titre -->
      <div>
        <h1 class="product-title">{{ product.title }}</h1>
        <div style="display: flex; align-items: center; gap: 1rem;">
          <div style="color: #f59e0b; font-size: 18px;">â˜…â˜…â˜…â˜…â˜…</div>
          <span style="color: #6b7280; font-weight: 500;">(4.9/5 - 127 avis)</span>
        </div>
      </div>

      <!-- Prix -->
      <div class="price-box">
        {% if current_variant.compare_at_price > current_variant.price %}
          <span class="product-price-compare">{{ current_variant.compare_at_price | money }}</span>
        {% endif %}
        <div id="variant-price" class="product-price">{{ current_variant.price | money }}</div>
      </div>

      <!-- Formulaire Produit -->
      {% form 'product', product, id: product_form_id, class: 'product-form' %}
        <input type="hidden" name="id" value="{{ current_variant.id }}">
        
        {% unless product.has_only_default_variant %}
          {% for option in product.options_with_values %}
            <div style="margin-bottom: 1rem;">
              <label style="display: block; font-weight: 600; margin-bottom: 8px;">{{ option.name }} :</label>
              <select name="options[{{ option.name | escape }}]" style="width: 100%; padding: 12px; border: 2px solid #d1d5db; border-radius: 8px; font-weight: 600;">
                {% for value in option.values %}
                  <option value="{{ value | escape }}" {% if option.selected_value == value %}selected{% endif %}>{{ value }}</option>
                {% endfor %}
              </select>
            </div>
          {% endfor %}
        {% endunless %}

        <div style="margin-bottom: 1rem;">
          <label style="display: block; font-weight: 600; margin-bottom: 8px;">QuantitÃ© :</label>
          <div class="quantity-selector">
            <button type="button" class="quantity-button" onclick="changeQuantity(-1)">-</button>
            <input type="number" name="quantity" id="quantity" value="1" min="1" class="quantity-input">
            <button type="button" class="quantity-button" onclick="changeQuantity(1)">+</button>
          </div>
        </div>
        
        <button 
          type="submit" 
          name="add" 
          class="product-button"
          {% unless current_variant.available %}disabled{% endunless %}>
          {% if current_variant.available %}
            âš¡ Acheter maintenant - <span id="add-to-cart-price">{{ current_variant.price | money }}</span>
          {% else %}
            Rupture de stock
          {% endif %}
        </button>
        
        <p style="text-align: center; font-size: 14px; color: #6b7280; margin-top: 1rem;">
          âœ… Paiement sÃ©curisÃ© â€¢ ðŸ“¦ Livraison rapide â€¢ ðŸ”„ Retour gratuit 30j
        </p>
      {% endform %}

      <!-- Description -->
      {% if product.description != blank %}
        <div style="background: #f8fafc; border: 1px solid #e2e8f0; border-radius: 16px; padding: 1.5rem;">
          <p style="font-size: 16px; color: #374151; line-height: 1.6; margin: 0;">{{ product.description }}</p>
        </div>
      {% endif %}

    </div>
  </div>
</div>

<script>
function changeMainImage(src) {
  document.getElementById('main-product-image').src = src;
}

function changeQuantity(change) {
  const quantityInput = document.getElementById('quantity');
  const currentValue = parseInt(quantityInput.value);
  const newValue = Math.max(1, currentValue + change);
  quantityInput.value = newValue;
}

// Gestion des variantes Shopify
document.addEventListener('DOMContentLoaded', function() {
  const productForm = document.querySelector('#{{ product_form_id }}');
  if (!productForm) return;
  
  const variants = {{ product.variants | json }};
  const productOptions = {{ product.options | map: 'name' | json }};
  
  function updateVariant() {
    const formData = new FormData(productForm);
    const selectedOptions = {};
    
    for (let [key, value] of formData.entries()) {
      if (key.startsWith('options[')) {
        const optionName = key.match(/\[(.*?)\]/)[1];
        selectedOptions[optionName] = value;
      }
    }
    
    const selectedVariant = variants.find(variant => {
      return productOptions.every(optionName => {
        const optionIndex = productOptions.indexOf(optionName) + 1;
        return variant['option' + optionIndex] === selectedOptions[optionName];
      });
    });
    
    if (selectedVariant) {
      // Mettre Ã  jour le prix
      const priceElement = document.getElementById('variant-price');
      const addToCartPrice = document.getElementById('add-to-cart-price');
      const formattedPrice = new Intl.NumberFormat('fr-FR', {
        style: 'currency',
        currency: '{{ cart.currency.iso_code }}'
      }).format(selectedVariant.price / 100);
      
      if (priceElement) priceElement.textContent = formattedPrice;
      if (addToCartPrice) addToCartPrice.textContent = formattedPrice;
      
      // Mettre Ã  jour l'image principale si la variante a une image
      if (selectedVariant.featured_media && selectedVariant.featured_media.preview_image) {
        changeMainImage(selectedVariant.featured_media.preview_image.url);
      }
      
      // GÃ©rer la disponibilitÃ©
      const submitButton = productForm.querySelector('button[type="submit"]');
      if (selectedVariant.available) {
        submitButton.disabled = false;
        submitButton.innerHTML = `âš¡ Acheter maintenant - <span id="add-to-cart-price">${formattedPrice}</span>`;
      } else {
        submitButton.disabled = true;
        submitButton.textContent = 'Rupture de stock';
      }
      
      // Mettre Ã  jour l'input hidden avec l'ID de la variante
      let variantInput = productForm.querySelector('input[name="id"]');
      if (!variantInput) {
        variantInput = document.createElement('input');
        variantInput.type = 'hidden';
        variantInput.name = 'id';
        productForm.appendChild(variantInput);
      }
      variantInput.value = selectedVariant.id;
    }
  }
  
  // Ã‰couter les changements d'options
  productForm.addEventListener('change', updateVariant);
  
  // Mise Ã  jour initiale
  updateVariant();
});
</script>

{% schema %}
{
  "name": "Main product",
  "tag": "section",
  "class": "section-main-product",
  "settings": []
}
{% endschema %}